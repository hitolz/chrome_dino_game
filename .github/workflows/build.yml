name: Build Game for Multiple Platforms

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: dino_game.exe
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            artifact: dino_game-arm64.exe
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: dino_game-linux
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: dino_game-macos-intel
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact: dino_game-macos-arm64

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev libudev-dev libxkbcommon-dev
    
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Prepare artifact
      shell: bash
      run: |
        # 创建发布目录
        mkdir -p release-package
        
        # 复制可执行文件
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cp target/${{ matrix.target }}/release/dino_game.exe release-package/
        else
          cp target/${{ matrix.target }}/release/dino_game release-package/
        fi
        
        # 复制游戏资源
        cp -r assets release-package/
        cp README.md release-package/ 2>/dev/null || true
        
        # 创建压缩包
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cd release-package && zip -r ../${{ matrix.artifact }}.zip . && cd ..
        else
          tar -czf ${{ matrix.artifact }}.tar.gz -C release-package .
        fi
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: |
          ${{ matrix.artifact }}.zip
          ${{ matrix.artifact }}.tar.gz
        if-no-files-found: ignore
